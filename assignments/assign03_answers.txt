

::: unilur-solution

```{r}
#| eval: false
wdi <- read_csv("data/wdi_valid.csv")
#wdi <- read_csv("data/wdi_clean.csv")
wdi_2022 <- wdi |>
  filter(year == 2022)
ggscatmat(wdi_2022, columns=3:7)
ggplot(wdi_2022, aes(x=fuel_exports, 
                     y=fuel_imports,
                     label=country_code)) +
  geom_point() +
  geom_smooth(se=F) +
  scale_x_sqrt()
```

:::



::: unilur-solution

```{r}
library(lubridate)
polls <- read_csv("data/president_polls.csv")
polls <- polls |>
  filter(mdy(end_date) > mdy("7/21/24")) |>
  filter(is.na(state)) |>
  filter(answer %in% c("Harris", "Trump")) |>
  select(-sponsor_candidate, -sponsor_candidate_id,
         -endorsed_candidate_id, -endorsed_candidate_name,
         -endorsed_candidate_party, -subpopulation, -tracking, 
         -notes, -cycle, -office_type, -seat_number, -seat_name,
         -election_date, -stage, -nationwide_batch,
         -ranked_choice_reallocated, -ranked_choice_round,
         -race_id, -candidate_id, -candidate_name,
         -state, -created_at, -population_full,
         -display_name, -pollster_rating_id, 
         -pollster_rating_name, -sponsor_candidate_party)

drop <- polls |> count(question_id, sort=TRUE) |> filter(n == 1)
polls <- polls |>
  filter(!(question_id %in% drop$question_id))
 
polls_wide <- polls |>
  pivot_wider(id_cols = question_id, 
              names_from = answer,
              values_from = pct)

polls_demog <- polls |>
  select(poll_id, pollster_id, pollster,
         sponsor_ids, sponsors,
         numeric_grade, pollscore, methodology,
         transparency_score, 
         start_date, end_date, 
         question_id, sample_size, population,
         url, source, internal, partisan) |>
  distinct()

polls_clean <- left_join(polls_demog, polls_wide, by="question_id")

write_csv(polls_clean, file="data/polls_Sep1_2024.csv")
```

```{r}
polls <- read_csv("data/polls_Sep1_2024.csv")

# Only keep top pollsters
pollster_count <- polls_clean |> count(pollster, sort=TRUE) 
polls_sub <- polls |> 
  filter(pollster %in% pollster_count$pollster[pollster_count$n > 5])

polls_sub <- polls_sub |>
  mutate(difference = Harris - Trump)
polls_sub |>
  ggplot(aes(x=fct_reorder(pollster, difference), y=difference)) +
    geom_hline(yintercept=0) +
    geom_jitter(width=0.1, height=0) +
  coord_flip() +
  xlab("")
```

This suggests some bias. Need to check if time of polls is different.

```{r}
polls_sub |>
  mutate(end_date = mdy(end_date)) |>
  mutate(pollster_id = as.character(pollster_id)) |>
  ggplot(aes(x=end_date, y=difference, colour=pollster_id)) +
    geom_hline(yintercept = 0) +
    geom_point() +
    geom_smooth(se=F, method="lm") +
    xlab("") +
    theme(aspect.ratio = 0.5, 
          legend.position = "bottom",
          legend.title = element_blank())
```

Looks like it is reasonably consistent over time. 

:::
